# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UIInterface.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from importlib import reload
reload(sys)
# sys.setdefaultencoding('utf-8')
import wave
import numpy as np
import pylab as plt
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox, QInputDialog, QFileDialog
import pyaudio
import os
#import tensorflow as tf
os.environ["CUDA_VISIBLE_DEVICES"] = "-1"
from PyQt5 import QtCore, QtGui, QtWidgets
# import tensorflow
import DTdomain

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1073, 846)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Playaudiobutton = QtWidgets.QPushButton(self.centralwidget)
        self.Playaudiobutton.setGeometry(QtCore.QRect(400, 350, 201, 28))
        self.Playaudiobutton.setObjectName("Playaudiobutton")
        self.Fillterbutton = QtWidgets.QPushButton(self.centralwidget)
        self.Fillterbutton.setGeometry(QtCore.QRect(800, 190, 201, 28))
        self.Fillterbutton.setObjectName("Fillterbutton")
        self.Starbutton = QtWidgets.QPushButton(self.centralwidget)
        self.Starbutton.setGeometry(QtCore.QRect(800, 150, 201, 28))
        self.Starbutton.setObjectName("Starbutton")
        self.PlotTFdomainbutton = QtWidgets.QPushButton(self.centralwidget)
        self.PlotTFdomainbutton.setGeometry(QtCore.QRect(800, 110, 201, 28))
        self.PlotTFdomainbutton.setObjectName("PlotTFdomainbutton")
        self.Contractbutton = QtWidgets.QPushButton(self.centralwidget)
        self.Contractbutton.setGeometry(QtCore.QRect(800, 230, 201, 28))
        self.Contractbutton.setObjectName("Contractbutton")
        self.groupBox_1 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_1.setGeometry(QtCore.QRect(70, 50, 291, 261))
        self.groupBox_1.setObjectName("groupBox_1")
        self.FIRbutton = QtWidgets.QRadioButton(self.groupBox_1)
        self.FIRbutton.setGeometry(QtCore.QRect(30, 50, 115, 19))
        self.FIRbutton.setObjectName("FIRbutton")
        self.IIRbutton = QtWidgets.QRadioButton(self.groupBox_1)
        self.IIRbutton.setGeometry(QtCore.QRect(30, 150, 115, 19))
        self.IIRbutton.setObjectName("IIRbutton")
        self.IIRcomboBox = QtWidgets.QComboBox(self.groupBox_1)
        self.IIRcomboBox.setGeometry(QtCore.QRect(40, 90, 161, 22))
        self.IIRcomboBox.setObjectName("IIRcomboBox")
        self.IIRcomboBox.addItem("")
        self.IIRcomboBox.addItem("")
        self.IIRcomboBox.addItem("")
        self.FIRcomboBox = QtWidgets.QComboBox(self.groupBox_1)
        self.FIRcomboBox.setGeometry(QtCore.QRect(40, 190, 87, 22))
        self.FIRcomboBox.setObjectName("FIRcomboBox")
        self.FIRcomboBox.addItem("")
        self.FIRcomboBox.addItem("")
        self.FIRcomboBox.addItem("")
        self.FIRcomboBox.addItem("")
        self.FIRcomboBox.addItem("")
        self.FIRcomboBox.addItem("")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(70, 340, 291, 151))
        self.groupBox_2.setObjectName("groupBox_2")
        self.LPbutton = QtWidgets.QRadioButton(self.groupBox_2)
        self.LPbutton.setGeometry(QtCore.QRect(40, 100, 115, 19))
        self.LPbutton.setObjectName("LPbutton")
        self.BSbutton = QtWidgets.QRadioButton(self.groupBox_2)
        self.BSbutton.setGeometry(QtCore.QRect(160, 100, 115, 19))
        self.BSbutton.setObjectName("BSbutton")
        self.HPbutton = QtWidgets.QRadioButton(self.groupBox_2)
        self.HPbutton.setGeometry(QtCore.QRect(40, 50, 115, 19))
        self.HPbutton.setObjectName("HPbutton")
        self.BPbutton = QtWidgets.QRadioButton(self.groupBox_2)
        self.BPbutton.setGeometry(QtCore.QRect(160, 50, 115, 19))
        self.BPbutton.setObjectName("BPbutton")
        self.Playaftaudiobutton = QtWidgets.QPushButton(self.centralwidget)
        self.Playaftaudiobutton.setGeometry(QtCore.QRect(800, 270, 201, 28))
        self.Playaftaudiobutton.setObjectName("Playaftaudiobutton")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(400, 50, 361, 261))
        self.groupBox.setObjectName("groupBox")
        self.fst1 = QtWidgets.QLineEdit(self.groupBox)
        self.fst1.setGeometry(QtCore.QRect(180, 190, 113, 21))
        self.fst1.setObjectName("fst1")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(70, 70, 131, 16))
        self.label_5.setObjectName("label_5")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(70, 100, 131, 16))
        self.label_7.setObjectName("label_7")
        self.Astop = QtWidgets.QLineEdit(self.groupBox)
        self.Astop.setGeometry(QtCore.QRect(180, 100, 113, 21))
        self.Astop.setObjectName("Astop")
        self.fp2 = QtWidgets.QLineEdit(self.groupBox)
        self.fp2.setGeometry(QtCore.QRect(180, 160, 113, 21))
        self.fp2.setObjectName("fp2")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(50, 40, 131, 16))
        self.label_4.setObjectName("label_4")
        self.Apass = QtWidgets.QLineEdit(self.groupBox)
        self.Apass.setGeometry(QtCore.QRect(180, 70, 113, 21))
        self.Apass.setObjectName("Apass")
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        self.label_10.setGeometry(QtCore.QRect(70, 190, 131, 16))
        self.label_10.setObjectName("label_10")
        self.fp1 = QtWidgets.QLineEdit(self.groupBox)
        self.fp1.setGeometry(QtCore.QRect(180, 130, 113, 21))
        self.fp1.setObjectName("fp1")
        self.fst2 = QtWidgets.QLineEdit(self.groupBox)
        self.fst2.setGeometry(QtCore.QRect(180, 220, 113, 21))
        self.fst2.setObjectName("fst2")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(70, 130, 131, 16))
        self.label_6.setObjectName("label_6")
        self.SamplingFrequency = QtWidgets.QLineEdit(self.groupBox)
        self.SamplingFrequency.setGeometry(QtCore.QRect(180, 40, 113, 21))
        self.SamplingFrequency.setObjectName("SamplingFrequency")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(70, 220, 131, 16))
        self.label_9.setObjectName("label_9")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(70, 160, 131, 16))
        self.label_8.setObjectName("label_8")
        self.filePathlineEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.filePathlineEdit.setGeometry(QtCore.QRect(400, 390, 201, 31))
        self.filePathlineEdit.setObjectName("filePathlineEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1073, 26))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menufile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Playaudiobutton.setText(_translate("MainWindow", "选择一个音频并播放"))
        self.Fillterbutton.setText(_translate("MainWindow", "对音频进行滤波"))
        self.Starbutton.setText(_translate("MainWindow", "开始设计滤波器"))
        self.PlotTFdomainbutton.setText(_translate("MainWindow", "时域分析及功率谱分析"))
        self.Contractbutton.setText(_translate("MainWindow", "对比滤波前后的图像"))
        self.groupBox_1.setTitle(_translate("MainWindow", "选择滤波器类型"))
        self.FIRbutton.setText(_translate("MainWindow", "IIR滤波器"))
        self.IIRbutton.setText(_translate("MainWindow", "FIR滤波器"))
        self.IIRcomboBox.setItemText(0, _translate("MainWindow", "巴特沃斯滤波器"))
        self.IIRcomboBox.setItemText(1, _translate("MainWindow", "切比雪夫滤波器"))
        self.IIRcomboBox.setItemText(2, _translate("MainWindow", "椭圆形滤波器"))
        self.FIRcomboBox.setItemText(0, _translate("MainWindow", "矩形窗"))
        self.FIRcomboBox.setItemText(1, _translate("MainWindow", "巴特列特"))
        self.FIRcomboBox.setItemText(2, _translate("MainWindow", "汉宁窗"))
        self.FIRcomboBox.setItemText(3, _translate("MainWindow", "海明窗"))
        self.FIRcomboBox.setItemText(4, _translate("MainWindow", "布拉克曼窗"))
        self.FIRcomboBox.setItemText(5, _translate("MainWindow", "凯泽窗"))
        self.groupBox_2.setTitle(_translate("MainWindow", "选择滤波类型"))
        self.LPbutton.setText(_translate("MainWindow", "低通滤波"))
        self.BSbutton.setText(_translate("MainWindow", "带阻滤波"))
        self.HPbutton.setText(_translate("MainWindow", "高通滤波"))
        self.BPbutton.setText(_translate("MainWindow", "带通滤波"))
        self.Playaftaudiobutton.setText(_translate("MainWindow", "播放滤波后的音频"))
        self.groupBox.setTitle(_translate("MainWindow", "参数设置"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Apass(dB)</span></p></body></html>"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Astop(dB)</span></p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">采样频率（Hz）</span></p></body></html>"))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">fst1(Hz)</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">fp1(Hz)</span></p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">fst2(Hz)</span></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">fp2（Hz）</span></p></body></html>"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.Playaudiobutton.clicked.connect(playwave)
        self.PlotTFdomainbutton.clicked.connect(printf)
class MyMainForm():
    def __init__(self, parent=None):

        # self.open_wave = ''
        self.setupUi(self)
        super(MyMainForm, self).__init__(parent)


# wave_open == ""
def playwave(self):
    print('on')
    global get_directory_path
    get_directory_path = QFileDialog.getExistingDirectory(None,
                                                          "选取指定文件夹",
                                                          "E:/pythonProject1/Project file/")
    get_directory_path, ok = QFileDialog.getOpenFileName(None,
                                                         "选取单个文件",
                                                         "E:/pythonProject1/Project file/",
                                                         "All Files (*)，Text Files (*.wav)")
    CHUNK = 1024
    global wave_open
    if str(get_directory_path) == "E:/pythonProject1/Project file/nuonuo.wav":
        wave_open = wave.open(r"E:/pythonProject1/Project file/nuonuo.wav", "rb")
    elif str(get_directory_path) == "E:/pythonProject1/Project file/me.wav": \
        wave_open = wave.open(r"E:/pythonProject1/Project file/me.wav", "rb")
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Hnoise.wav": \
        wave_open = wave.open(r"E:/pythonProject1/Project file/Hnoise.wav", "rb")
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Lnoise.wav": \
        wave_open = wave.open(r"E:/pythonProject1/Project file/Lnoise.wav", "rb")
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Mnoise.wav":
        wave_open = wave.open(r"E:/pythonProject1/Project file/Mnoise.wav", "rb")
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Snoise.wav": \
        wave_open = wave.open(r"E:/pythonProject1/Project file/Snoise.wav", "rb")
    data = wave_open.readframes(CHUNK)
    p = pyaudio.PyAudio()  # 创建播放器
    FORMAT = p.get_format_from_width(wave_open.getsampwidth())
    CHANNELS = wave_open.getnchannels()
    RATE = wave_open.getframerate()
    print("FORMAT:{}\nCHANNELS:{}\nRATE:{}".format(FORMAT, CHANNELS, RATE))
        # 打开音频流，output = True表示音频输出
    stream = p.open(format=FORMAT,
                    channels=CHANNELS,
                    rate=RATE,
                    frames_per_buffer=CHUNK,
                    output=True)
        # play stream按照1024的块读取音频数据到音频流，并播放
    while len(data) > 0:
        stream.write(data)
        data = wave_open.readframes(CHUNK)


#     if ok:
#         self.filePathlineEdit.setText(str(get_directory_path))
#

    # if ok:
    #     self.filePathlineEdit.setText(str(get_directory_path)),
    #     get_directory_path, ok = QFileDialog.getOpenFileName(None,
    #                                                          "选取多个文件",
    #                                                          "E:/pythonProject1/Project file/", "All Files (*)，Text Files (*.wav)")
    # if ok:
    #     self.filePathlineEdit.setText(str(get_directory_path))

def printf(self):
    if str(get_directory_path) == "E:/pythonProject1/Project file/nuonuo.wav":
        DTdomain.nuonuo()
    elif str(get_directory_path) == "E:/pythonProject1/Project file/me.wav": \
        DTdomain.me()
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Hnoise.wav": \
        DTdomain.Hnoise()
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Lnoise.wav": \
        DTdomain.Lnoise()
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Mnoise.wav":
        DTdomain.Mnoise()
    elif str(get_directory_path) == "E:/pythonProject1/Project file/Snoise.wav": \
        DTdomain.Snoise()
# def lvbo(self):

if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())